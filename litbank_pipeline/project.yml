title: "Train pipelines on LitBank."

directories: ["configs", "assets", "corpus", "training", "scripts", "metrics"]
assets:
  - dest: "assets/entities/"
    git:
      repo: "https://github.com/dbamman/litbank"
      branch: "master"
      path: "entities/brat/"
  
  - dest: "assets/events/"
    git:
      repo: "https://github.com/dbamman/litbank"
      branch: "master"
      path: "events/brat/"

vars:
  train_ratio: 0.8
  dev_ratio: 0.1
  seed: 83
  gpu: 0


workflows:
  
  ner:
    - "train-ner"
    - "evaluate-ner-test"
  
  ner-lstm:
    - "train-ner-lstm"
    - "evaluate-ner-lstm-test"

  spancat:
    - "train-spancat"
    - "evaluate-spancat-test"
  
  spancat-lstm:
    - "train-spancat-lstm"
    - "evaluate-spancat-lstm-test"

  spancat-singlelabel:
    - "train-spancat-singlelabel"
    - "evaluate-spancat-singlelabel-test"
  
  spancat-singlelabel-lstm:
    - "train-spancat-singlelabel-lstm"
    - "evaluate-spancat-singlelabel-lstm-test"

  tagger:
    - "train-tagger"
    - "evaluate-tagger-test"
  
  tagger-lstm:
    - "train-tagger-lstm"
    - "evaluate-tagger-lstm-test"


commands:
  - name: "prepare-entities"
    help: "Prepare the LitBank data set for use in spaCy."
    script:
      - >-
        python -m scripts.prepare prepare-brat -i assets/entities
        -o corpus/entity_spans.spacy -l en -f
      - >-
        python -m scripts.prepare spans2ents -i corpus/entity_spans.spacy
        -l en -f -s sc -o corpus/entity_ents.spacy
      - >- 
        python -m scripts.prepare split -i corpus/entity_spans.spacy
        -t ${vars.train_ratio} -d ${vars.dev_ratio}
        -l en -se ${vars.seed} --shuffle
      - >- 
        python -m scripts.prepare split -i corpus/entity_ents.spacy
        -t ${vars.train_ratio} -d ${vars.dev_ratio}
        -l en -se ${vars.seed} --shuffle
      - >-
        python -m spacy debug data configs/spancat.cfg
        --paths.train corpus/entity_spans-train.spacy
        --paths.dev corpus/entity_spans-dev.spacy
  
  - name: "prepare-event"
    help: "Prepare the LitBank data set for use in spaCy."
    script:
      - >-
        python -m scripts.prepare prepare-brat -i assets/events
        -o corpus/event_spans.spacy -l en -f
      - >-
        python -m scripts.prepare spans2tags -i corpus/event_spans.spacy
        -l en -f -s sc -o corpus/event_tags.spacy
      - >- 
        python -m scripts.prepare split -i corpus/event_tags.spacy
        -t ${vars.train_ratio} -d ${vars.dev_ratio}
        -l en -se ${vars.seed} --shuffle


  - name: "train-ner"
    help: "Train the default NER pipeline."
    script:
      - >-
        python -m spacy train
        configs/ner.cfg
        --output training/ner
        --paths.train corpus/entity_ents-train.spacy
        --paths.dev corpus/entity_ents-dev.spacy
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu}
  
  - name: "train-ner-lstm"
    help: "Train the default NER pipeline."
    script:
      - >-
        python -m spacy train
        configs/ner_lstm.cfg
        --output training/ner_lstm
        --paths.train corpus/entity_ents-train.spacy
        --paths.dev corpus/entity_ents-dev.spacy
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu}

  
  - name: "train-spancat"
    help: "Train the default spancat pipeline."
    script:
      - >-
        python -m spacy train
        configs/spancat.cfg
        --output training/spancat
        --paths.train corpus/entity_spans-train.spacy
        --paths.dev corpus/entity_spans-dev.spacy
        --paths.vectors en_core_web_lg
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu}
  
  - name: "train-spancat-lstm"
    help: "Train the default spancat pipeline."
    script:
      - >-
        python -m spacy train
        configs/spancat_lstm.cfg
        --output training/spancat_lstm
        --paths.train corpus/entity_spans-train.spacy
        --paths.dev corpus/entity_spans-dev.spacy
        --paths.vectors en_core_web_lg
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu}

  
  - name: "find-threshold"
    help: "Find classifier threshold for spancat."
    script:
      - >- 
        python -m spacy find-threshold training/spancat/model-best
        corpus/entity_spans-dev.spacy spancat threshold spans_sc_f


  - name: "train-spancat-singlelabel"
    help: "Train the default spancat pipeline."
    script:
      - >-
        python -m spacy train
        configs/spancat_singlelabel.cfg
        --output training/spancat_singlelabel
        --paths.train corpus/entity_spans-train.spacy
        --paths.dev corpus/entity_spans-dev.spacy
        --paths.vectors en_core_web_lg
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu}
  
  - name: "train-spancat-singlelabel-lstm"
    help: "Train the default spancat pipeline."
    script:
      - >-
        python -m spacy train
        configs/spancat_singlelabel_lstm.cfg
        --output training/spancat_singlelabel_lstm
        --paths.train corpus/entity_spans-train.spacy
        --paths.dev corpus/entity_spans-dev.spacy
        --paths.vectors en_core_web_lg
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu}
  

  - name: "train-tagger"
    help: "Train the default NER pipeline."
    script:
      - >-
        python -m spacy train
        configs/tagger.cfg
        --output training/tagger
        --paths.train corpus/event_tags-train.spacy
        --paths.dev corpus/event_tags-dev.spacy
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu}
        --code scripts/positive_tagger_scorer.py
        --paths.vectors en_core_web_lg

  - name: "evaluate-tagger-dev"
    help: "Evaluate Tagger model."
    script:
      - >-
        python -m spacy evaluate
        training/tagger/model-best
        corpus/event_tags-dev.spacy
        --output metrics/tagger_dev.json
        --gpu-id ${vars.gpu}
        --code scripts/positive_tagger_scorer.py
  
  - name: "evaluate-tagger-test"
    help: "Evaluate Tagger model."
    script:
      - >-
        python -m spacy evaluate
        training/tagger/model-best
        corpus/event_tags-test.spacy
        --output metrics/tagger_test.json
        --gpu-id ${vars.gpu}
        --code scripts/positive_tagger_scorer.py
  
  - name: "train-tagger-lstm"
    help: "Train the default NER pipeline."
    script:
      - >-
        python -m spacy train
        configs/tagger_lstm.cfg
        --output training/tagger_lstm
        --paths.train corpus/event_tags-train.spacy
        --paths.dev corpus/event_tags-dev.spacy
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu}
        --code scripts/positive_tagger_scorer.py
        --paths.vectors en_core_web_lg

  - name: "evaluate-tagger-lstm-dev"
    help: "Evaluate Tagger model."
    script:
      - >-
        python -m spacy evaluate
        training/tagger_lstm/model-best
        corpus/event_tags-dev.spacy
        --output metrics/tagger_lstm_dev.json
        --gpu-id ${vars.gpu}
        --code scripts/positive_tagger_scorer.py
  
  - name: "evaluate-tagger-lstm-test"
    help: "Evaluate Tagger model."
    script:
      - >-
        python -m spacy evaluate
        training/tagger_lstm/model-best
        corpus/event_tags-test.spacy
        --output metrics/tagger_lstm_test.json
        --gpu-id ${vars.gpu}
        --code scripts/positive_tagger_scorer.py


  - name: "evaluate-ner-dev"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/ner/model-best
        corpus/entity_ents-dev.spacy
        --output metrics/ner_dev.json
        --gpu-id ${vars.gpu}


  - name: "evaluate-ner-test"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/ner/model-best
        corpus/entity_ents-test.spacy
        --output metrics/ner_test.json
        --gpu-id ${vars.gpu}
  
  - name: "evaluate-ner-lstm-dev"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/ner_lstm/model-best
        corpus/entity_ents-dev.spacy
        --output metrics/ner_lstm_dev.json
        --gpu-id ${vars.gpu}


  - name: "evaluate-ner-lstm-test"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/ner_lstm/model-best
        corpus/entity_ents-test.spacy
        --output metrics/ner_lstm_test.json
        --gpu-id ${vars.gpu}


  - name: "evaluate-spancat-dev"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/spancat/model-best
        corpus/entity_spans-dev.spacy
        --output metrics/spancat_dev.json
        --gpu-id ${vars.gpu}


  - name: "evaluate-spancat-test"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/spancat/model-best
        corpus/entity_spans-test.spacy
        --output metrics/spancat_test.json
        --gpu-id ${vars.gpu}
  
  - name: "evaluate-spancat-lstm-dev"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/spancat_lstm/model-best
        corpus/entity_spans-dev.spacy
        --output metrics/spancat_lstm_dev.json
        --gpu-id ${vars.gpu}


  - name: "evaluate-spancat-lstm-test"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/spancat_lstm/model-best
        corpus/entity_spans-test.spacy
        --output metrics/spancat_lstm_test.json
        --gpu-id ${vars.gpu}


  - name: "evaluate-spancat-singlelabel-dev"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/spancat_singlelabel/model-best
        corpus/entity_spans-dev.spacy
        --output metrics/spancat_singlelabel_dev.json
        --gpu-id ${vars.gpu}
  

  - name: "evaluate-spancat-singlelabel-test"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/spancat_singlelabel/model-best
        corpus/entity_spans-test.spacy
        --output metrics/spancat_singlelabel_test.json
        --gpu-id ${vars.gpu}
  
  - name: "evaluate-spancat-singlelabel-lstm-dev"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/spancat_singlelabel_lstm/model-best
        corpus/entity_spans-dev.spacy
        --output metrics/spancat_singlelabel_lstm_dev.json
        --gpu-id ${vars.gpu}


  - name: "evaluate-spancat-singlelabel-lstm-test"
    help: "Evaluate NER model."
    script:
      - >-
        python -m spacy evaluate
        training/spancat_singlelabel_lstm/model-best
        corpus/entity_spans-test.spacy
        --output metrics/spancat_singlelabel_lstm_test.json
        --gpu-id ${vars.gpu}
